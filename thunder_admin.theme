<?php

/**
 * @file
 * Functions to support theming in the Thunder Admin theme.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 */
function thunder_admin_preprocess_html(&$variables) {
  // If on a node add or edit page, add a class for enabling advanced tray functionality.
  $path_args = explode('/', \Drupal::request()->getPathInfo());
  if ($suggestions = theme_get_suggestions($path_args, 'page', '-')) {
    foreach ($suggestions as $suggestion) {
      if ($suggestion === 'page--node-edit' ||
          strpos($suggestion, 'page--node-add') !== FALSE ||
          $suggestion === 'page--taxonomy-term-edit') {
        $variables['attributes']['class'][] = 'advanced-sidebar-tray';
      }
    }
  }

}


/**
 * Implements hook_form_node_article_edit_form_alter().
 */
function thunder_admin_form_node_article_edit_form_alter(&$form, FormStateInterface $form_state) {
  _thunder_admin_content_form_alter_helper($form, $form_state);
}

/**
 * Implements hook_form_node_article_form_alter().
 */
function thunder_admin_form_node_article_form_alter(&$form, FormStateInterface $form_state) {
  _thunder_admin_content_form_alter_helper($form, $form_state);
}

/**
 * Helper function for content form alter hooks.
 *
 * @param array $form
 *   The article form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The formstate object.
 */
function _thunder_admin_content_form_alter_helper(&$form, FormStateInterface $form_state) {

  // Set classes to the paragraphs items to be able to style them.
  if (isset($form['field_paragraphs']['widget']['#max_delta']) && $form['field_paragraphs']['widget']['#max_delta'] > 0) {
    for ($i = 0; $i <= $form['field_paragraphs']['widget']['#max_delta']; $i++) {

      // Add a base class to the paragraph reference field item.
      $form['field_paragraphs']['widget'][$i]['#attributes']['class'][] = 'paragraph-form-item';

      // Add modifier classes based upon the display mode.
      if (isset($form['field_paragraphs']['widget'][$i]['preview'])) {
        $form['field_paragraphs']['widget'][$i]['#attributes']['class'][] = 'paragraph-form-item--has-preview';
      }
      elseif (isset($form['field_paragraphs']['widget'][$i]['subform'])) {
        $form['field_paragraphs']['widget'][$i]['#attributes']['class'][] = 'paragraph-form-item--has-subform';
      }

      // Add a class to the container holding the actions.
      if (isset($form['field_paragraphs']['widget'][$i]['top'])) {
        $form['field_paragraphs']['widget'][$i]['top']['#attributes']['class'] = ['paragraph-form-item__actions'];
      }
    }
  }
}
