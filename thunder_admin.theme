<?php

/**
 * @file
 * Functions to support theming in the Thunder Admin theme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 */
function thunder_admin_preprocess_html(&$variables) {
  // If on a node or term add or edit page, add a class for enabling advanced
  // tray functionality.
  $route = Drupal::service('current_route_match')->getRouteName();
  switch ($route) {
    case 'entity.taxonomy_term.add_form':
    case 'entity.taxonomy_term.edit_form':
    case 'node.add':
    case 'entity.node.edit_form':
      $variables['attributes']['class'][] = 'advanced-sidebar-tray';
      break;
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Provide additional suggestions for form inputs and buttons.
 */
function thunder_admin_theme_suggestions_input_alter(&$suggestions, $variables) {
  if (isset($variables['element']['#type']) && $variables['element']['#type'] == 'submit') {
    if (isset($variables['element']['#paragraphs_mode'])) {
      $suggestions[] = 'input__submit__paragraphs_' . $variables['element']['#paragraphs_mode'];
    }
    /*if (isset($variables['element']['#ief_form'])
      && (
        $variables['element']['#ief_form'] == 'add'
        || $variables['element']['#ief_form'] == 'ief_add_existing'
      )
    ) {
      $suggestions[] = 'input__submit__add';
    }
    elseif (isset($variables['element']['#ief_row_form']) && $variables['element']['#ief_row_form'] == 'edit') {
      $suggestions[] = 'input__submit__edit';
    }
    elseif (isset($variables['element']['#ief_row_form']) && $variables['element']['#ief_row_form'] == 'remove') {
      $suggestions[] = 'input__submit__delete';
    }
    elseif (
      isset($variables['element']['#parents']) && (
        in_array('ief_add_save', $variables['element']['#parents'], TRUE)
        || in_array('ief_edit_save', $variables['element']['#parents'], TRUE)
        || in_array('ief_reference_save', $variables['element']['#parents'], TRUE)
      )
    ) {
      $suggestions[] = 'input__submit__save';
    }*/
  }
}

// @todo: remove this hook: meant for debugging all forms quickly
function thunder_admin_form_alter(&$form, FormStateInterface $form_state) {
  $form = $form;
}

/**
 * Implements hook_form_taxonomy_term_channel_form_alter().
 */
function thunder_admin_form_taxonomy_term_channel_form_alter(&$form, FormStateInterface $form_state) {
  _thunder_admin_content_form_alter_helper($form, $form_state);
}

/**
 * Implements hook_form_taxonomy_term_tags_form_alter().
 */
function thunder_admin_form_taxonomy_term_tags_form_alter(&$form, FormStateInterface $form_state) {
  _thunder_admin_content_form_alter_helper($form, $form_state);
}

/**
 * Implements hook_form_node_article_edit_form_alter().
 */
function thunder_admin_form_node_article_edit_form_alter(&$form, FormStateInterface $form_state) {
  _thunder_admin_content_form_alter_helper($form, $form_state);
}

/**
 * Implements hook_form_node_article_form_alter().
 */
function thunder_admin_form_node_article_form_alter(&$form, FormStateInterface $form_state) {
  _thunder_admin_content_form_alter_helper($form, $form_state);
}

/**
 * Helper function for content form alter hooks.
 *
 * @param array $form
 *   The article form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The formstate object.
 */
function _thunder_admin_content_form_alter_helper(&$form, FormStateInterface $form_state) {

  // Set classes to the paragraphs items to be able to style them.
  if (isset($form['field_paragraphs']['widget']['#max_delta']) && $form['field_paragraphs']['widget']['#max_delta'] >= 0) {
    for ($i = 0; $i <= $form['field_paragraphs']['widget']['#max_delta']; $i++) {

      // Add a base class to the paragraph reference field item.
      $form['field_paragraphs']['widget'][$i]['#attributes']['class'][] = 'paragraph-form-item';

      // Add modifier classes based upon the display mode.
      if (isset($form['field_paragraphs']['widget'][$i]['preview'])) {
        $form['field_paragraphs']['widget'][$i]['#attributes']['class'][] = 'paragraph-form-item--has-preview';
      }
      elseif (isset($form['field_paragraphs']['widget'][$i]['subform'])) {
        $form['field_paragraphs']['widget'][$i]['#attributes']['class'][] = 'paragraph-form-item--has-subform';
      }

      // Add a class to the container holding the actions.
      if (isset($form['field_paragraphs']['widget'][$i]['top'])) {
        $form['field_paragraphs']['widget'][$i]['top']['#attributes']['class'] = ['paragraph-form-item__actions'];
      }
    }
  }
}
